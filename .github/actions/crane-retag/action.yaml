---
name: Crane retag
description: Retagging artefact with Crane
author: ixxeL
inputs:
  prepare:
    description: prepare binary install
    required: false
    default: "true"
  registry-url:
    description: URL of the registry to transfer image
    required: false
  registry-username:
    description: Username of the docker registry
    required: false
  registry-password:
    description: Password of the docker registry
    required: false
  src-img:
    description: source image to retag
    required: false
  dst-tag:
    description: destination image to retag
    required: false
  tls-verify:
    description: using tls for source
    required: false
    default: "true"

runs:
  using: composite
  steps:
    - id: prepare
      if: ${{ inputs.prepare == 'true' }}
      run: |
        set +e
        VERSION=$(curl -s "https://api.github.com/repos/google/go-containerregistry/releases/latest" | jq -r '.tag_name')
        OS=Linux
        ARCH=x86_64
        curl -sL "https://github.com/google/go-containerregistry/releases/download/${VERSION}/go-containerregistry_${OS}_${ARCH}.tar.gz" > go-containerregistry.tar.gz
        tar -zxvf go-containerregistry.tar.gz -C /usr/local/bin/ crane
      shell: bash
      env:
        RED: \033[1;31m
        GREEN: \033[1;32m
        YELLOW: \033[1;33m
        BLUE: \033[1;34m
        PURPLE: \033[1;35m
        CYAN: \033[1;36m
        BLANK: \033[0m
    - id: crane-retag
      run: |
        set +e
        echo -e "${BLUE}[ STEP - IMAGE RETAG ] > Re-tagging docker image with Crane${BLANK}"
        echo -e "${CYAN}[ INFO ] > Crane version.${BLANK}"
        crane version

        echo -e "${CYAN}[ INFO ] > Using classic login to ${PURPLE}${{ inputs.registry-url }}${BLANK}"
        crane auth login --username=${{ inputs.registry-username }} --password=${{ inputs.registry-password }} --insecure=${{ inputs.tls-verify }} ${{ inputs.registry-url }}

        if [[ $? -eq 0 ]]
        then
          echo -e "${GREEN}[ CHECK SUCCESS ] > Login to ${PURPLE}${{ inputs.registry-url }}${GREEN} success${BLANK}"
        else
          echo -e "${RED}[ STEP FAILED ] > Login to ${PURPLE}${{ inputs.registry-url }}${RED} failed${BLANK}"
          exit 1
        fi

        echo -e "${YELLOW}[ EXECUTING ] > Executing ${PURPLE}${{ inputs.src-img }}${YELLOW} re-tagging to ${PURPLE}${{ inputs.dst-tag }}${BLANK}"
        crane tag --insecure=${{ inputs.tls-verify }} \
                  ${{ inputs.src-img }} \
                  ${{ inputs.dst-tag }}
        if [[ $? -eq 0 ]]
        then
          echo -e "${GREEN}[ CHECK SUCCESS ] > Retag success${BLANK}"
        else
          echo -e "${RED}[ STEP FAILED ] > Something went wrong when retagging the docker image ${YELLOW}${{ inputs.src-img }}${RED} to ${YELLOW}${{ inputs.dst-tag }}${BLANK}"
          exit 1
        fi
      shell: bash
      env:
        RED: \033[1;31m
        GREEN: \033[1;32m
        YELLOW: \033[1;33m
        BLUE: \033[1;34m
        PURPLE: \033[1;35m
        CYAN: \033[1;36m
        BLANK: \033[0m
