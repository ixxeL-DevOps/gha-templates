---
name: Git clone
description: cloning git repo
author: ixxeL
inputs:
  mode:
    default: pat
    required: false
    description: Mode either 'pat' or 'app'
  app-id:
    required: false
    description: GitHub APP ID
  private-key:
    required: false
    description: GitHub APP Private key
  fetch-depth:
    default: "1"
    required: false
    description: git clone depth
  git-token:
    default: ${{ github.token }}
    required: false
    description: git clone depth
outputs:
  TOKEN:
    description: template file path
    value: ${{ steps.get-app-token.outputs.token || inputs.git-token }}
  USER_EMAIL:
    description: Git user email
    value: ${{ steps.get-user-info.outputs.USER_EMAIL }}
  USER_NAME:
    description: Git user name
    value: ${{ steps.get-user-info.outputs.USER_NAME || github.actor }}

runs:
  using: composite
  steps:
    - name: GH App get Token
      id: get-app-token
      if: inputs.mode == 'app'
      uses: actions/create-github-app-token@v1
      with:
        app-id: ${{ inputs.app-id }}
        private-key: ${{ inputs.private-key }}
    - name: Clone code (GH App)
      uses: actions/checkout@v4
      if: inputs.mode == 'app'
      with:
        fetch-depth: ${{ inputs.fetch-depth }}
        token: ${{ steps.get-app-token.outputs.token }}
    - name: Get GitHub App User info
      id: get-user-info
      if: inputs.mode == 'app'
      run: |
        USER_ID=$(gh api "/users/${{ steps.get-app-token.outputs.app-slug }}[bot]" --jq .id)
        echo "USER_EMAIL=${USER_ID}+${{ steps.get-app-token.outputs.app-slug }}[bot]@users.noreply.github.com" >> "$GITHUB_OUTPUT"
        echo "USER_NAME=${{ steps.get-app-token.outputs.app-slug }}[bot]" >> "$GITHUB_OUTPUT"
      shell: bash
      env:
        GH_TOKEN: ${{ steps.get-app-token.outputs.token }}
    - name: Clone code (PAT)
      id: clone
      if: inputs.mode == 'pat'
      uses: actions/checkout@v4
      with:
        fetch-depth: ${{ inputs.fetch-depth }}
        token: ${{ inputs.git-token }}
