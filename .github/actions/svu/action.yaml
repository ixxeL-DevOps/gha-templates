---
name: SVU
description: Semantic Versioning Utils
author: ixxeL
inputs:
  prepare:
    default: "true"
    required: false
    description: prepare env
  workingdir:
    required: false
    description: working directory
    default: .
  component:
    required: false
    default: ""
    description: note file or stdin
outputs:
  LAST_TAG:
    description: last git tag
    value: ${{ steps.svu.outputs.LAST_TAG }}
  VERSION:
    description: next git tag
    value: ${{ steps.svu.outputs.VERSION }}

runs:
  using: composite
  steps:
    - id: prepare
      if: ${{ inputs.prepare == 'true' }}
      shell: bash
      run: |
        set +e
        mkdir -p target_dir
        wget https://github.com/caarlos0/svu/releases/download/v1.12.0/svu_1.12.0_linux_amd64.tar.gz -P target_dir
        cd target_dir
        tar -xzvf svu_1.12.0_linux_amd64.tar.gz
        chmod +x svu
        mv svu /usr/local/bin/
        cd ..
        rm -rf target_dir
      env:
        RED: \033[1;31m
        GREEN: \033[1;32m
        YELLOW: \033[1;33m
        BLUE: \033[1;34m
        PURPLE: \033[1;35m
        CYAN: \033[1;36m
        BLANK: \033[0m
    - id: svu
      run: |
        set +e
        echo -e "${BLUE}[ STEP - SVU ] > Semantic Versioning Utils${BLANK}"
        echo -e "${CYAN}[ INFO ] > svu version.${BLANK}"
        svu --version

        if [ -n "${{ inputs.component }}" ]
        then
          COMPONENT="${{ inputs.component }}-"
        fi

        echo -e "${YELLOW}[ EXECUTING ] > Calculating last and next tag${BLANK}"
        LAST_TAG=$(svu current --prefix="${COMPONENT}v" --pattern='${COMPONENT}v*' --directory=${{ inputs.workingdir }})
        if [ $? -ne 0 ]
        then
          LAST_TAG=""
          VERSION="${COMPONENT}v0.1.0"
        else
          VERSION=$(svu next --prefix="${COMPONENT}v" --pattern='${COMPONENT}v*' --directory=${{ inputs.workingdir }})
        fi

        echo -e "${CYAN}[ INFO ] > Last tag is ${PURPLE}${LAST_TAG}${BLANK}"
        echo -e "${CYAN}[ INFO ] > New tag is ${PURPLE}${VERSION}${BLANK}"
        echo "LAST_TAG=$LAST_TAG" >> $GITHUB_OUTPUT
        echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
      shell: bash
      env:
        RED: \033[1;31m
        GREEN: \033[1;32m
        YELLOW: \033[1;33m
        BLUE: \033[1;34m
        PURPLE: \033[1;35m
        CYAN: \033[1;36m
        BLANK: \033[0m
