---
name: Automate tag
on:
  workflow_call:
    secrets:
      git-token:
        required: true
    inputs:
      workingdir:
        required: false
        default: "./"
        type: string
      runs-on:
        description: OS to run jobs on
        required: false
        default: ubuntu-latest
        type: string
      ci-image:
        description: docker image to run pipeline on
        required: false
        default: ixxel/toolbox:base-latest
        type: string
      workflows-directory:
        description: directory in which to find workflows
        required: false
        default: "./.github/workflows/*.yaml"
        type: string
      actions-source:
        description: origin of actions
        required: false
        default: ixxeL-DevOps
        type: string
      new-ref:
        required: false
        type: string
      git-workdir:
        required: false
        default: .
        type: string
      push-option:
        required: false
        default: ci.skip
        type: string
      update-base-tag:
        required: false
        default: true
        type: boolean
      release-verify-tag:
        required: false
        default: false
        type: boolean
      release-target-branch:
        required: false
        default: ${{ github.ref_name }}
        type: string
      increment:
        required: false
        default: fix
        type: string
jobs:
  auto-tag-repo:
    name: "\U0001F680 Release"
    timeout-minutes: 5
    runs-on: ${{ inputs.runs-on }}
    # permissions:
    #   contents: read
    #   pages: write
    #   id-token: write
    container:
      image: ${{ inputs.ci-image }}
    steps:
      - name: Clone code
        uses: actions/checkout@v4
        with:
          fetch-depth: "0"
          token: ${{ secrets.git-token }}
      - name: Git config
        id: git-config
        uses: ixxeL-DevOps/gha-templates/.github/actions/git-config@v0.8.0
        with:
          git-workdir: ${{ inputs.workingdir }}
      - name: Calculate last and next tag
        id: svu
        uses: ixxeL-DevOps/gha-templates/.github/actions/svu@v0.8.0
        with:
          workingdir: ${{ inputs.workingdir }}
      - name: Substitute ref
        id: substitute-ref
        uses: ixxeL-DevOps/gha-templates/.github/actions/change-action-ref@v0.8.0
        with:
          workflows-directory: ${{ inputs.workflows-directory }}
          actions-source: ${{ inputs.actions-source }}
          new-ref: ${{ steps.svu.outputs.VERSION }}
      - name: Update changelog
        id: changelog
        uses: ixxeL-DevOps/gha-templates/.github/actions/generate-changelog@v0.8.0
        with:
          workingdir: ${{ inputs.workingdir }}
          install: "false"
          lower-tag: ${{ steps.svu.outputs.LAST_TAG  != '' && steps.svu.outputs.LAST_TAG  || '' }}
          upper-tag: ${{ github.sha }}
      - name: Git push
        id: git-push
        uses: ixxeL-DevOps/gha-templates/.github/actions/git-push@v0.8.0
        with:
          git-msg: ":package: CI release version ${{ steps.svu.outputs.VERSION }} from user ${GITHUB_ACTOR} [skip ci]"
          git-workdir: ${{ inputs.workingdir }}
          git-staging-dir: ${{ inputs.workingdir }}
          push-option: ${{ inputs.push-option }}
      - name: GH Release
        id: gh-release
        uses: ixxeL-DevOps/gha-templates/.github/actions/gh-release@v0.8.0
        with:
          tag: ${{ steps.svu.outputs.VERSION }}
          verify-tag: ${{ inputs.release-verify-tag }}
          last-tag: ${{ steps.svu.outputs.LAST_TAG  != '' && steps.svu.outputs.LAST_TAG  || '' }}
          target-branch: ${{ inputs.release-target-branch }}
          auto-changelog: "false"
          notes-file: ${{ inputs.workingdir }}/CHANGELOG.md
        env:
          GH_TOKEN: ${{ github.token }}
      - name: Extract tags
        id: extract-tags
        run: |
          major_version=$(echo "${{ steps.svu.outputs.VERSION }}" | awk -F. '{print $1}')
          minor_version=$(echo "${{ steps.svu.outputs.VERSION }}" | awk -F. '{print $1"."$2}')
          echo "MAJOR_TAG=$major_version" >> $GITHUB_OUTPUT
          echo "MINOR_TAG=$minor_version" >> $GITHUB_OUTPUT
      - name: Update stable tag to latest version
        run: |
          git tag -f ${{ steps.extract-tags.outputs.MAJOR_TAG }} ${{ github.ref_name }}
          git tag -f ${{ steps.extract-tags.outputs.MINOR_TAG }} ${{ github.ref_name }}
          git tag -f latest ${{ github.ref_name }}
          git push -f origin --tags
      - name: Git revert to main
        id: git-revert
        uses: ixxeL-DevOps/gha-templates/.github/actions/git-revert@v0.8.0
        with:
          git-workdir: ${{ inputs.workingdir }}
          push-option: ${{ inputs.push-option }}
          commit-sha-revert: ${{ steps.git-push.outputs.GIT_PUSHED_COMMIT_SHA }}
          git-msg: ":recycle: reverted main ref [skip ci]"
