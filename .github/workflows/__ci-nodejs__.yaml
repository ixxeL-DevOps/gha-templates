##################################################
# DO NOT CALL DIRECTLY THIS WORKFLOW ON PROJECTS #
##################################################
#
# Test, build and push docker image for a NodJs
# project using Pnpm
#
---
name: CI build
on:
  workflow_call:
    secrets:
      git-admin-token:
        required: false
      git-token:
        required: false
      sonar-token:
        required: false
      fedid-login:
        required: false
      fedid-password:
        required: false
      fedid-client-id:
        required: false
      bff-key:
        required: false
      snyk-token:
        required: false
      prisma-user:
        required: false
      prisma-pass:
        required: false
    inputs:
      # General
      workingdir:
        required: false
        type: string
        default: .
      image-name:
        required: false
        type: string
        default: test
      quick-fail:
        required: false
        type: string
        default: "false"
        description: force qui failure behavior
      push-option:
        required: false
        default: ci.skip
        type: string
      git-enable-tag:
        required: false
        default: "true"
        type: string
      gh-release:
        required: false
        default: "false"
        type: string
      # GCP auth
      workload_identity_provider:
        required: true
        type: string
      service_account:
        required: true
        type: string
      # Sonar analysis
      sonar-args:
        required: false
        type: string
      # node
      node-version:
        required: false
        type: string
        default: "18"
      pnpm-version:
        required: false
        type: string
        default: "8"
      # playwright
      playwright-cache:
        required: false
        type: string
        default: "true"
      environment:
        required: false
        type: string
        default: "development"
      fedid-url:
        required: false
        type: string
      bff-url:
        required: false
        type: string
      gcs-bucket-name:
        required: false
        type: string
      gcs-reports-path:
        required: false
        type: string
      docker-target-registry:
        required: false
        type: string
      gcp-base-url:
        required: false
        type: string
      docker-buildargs:
        required: false
        type: string
      docker-sbom:
        required: false
        default: true
        type: boolean
      docker-provenance:
        required: false
        default: true
        type: boolean
      # Vault
      vault-enabled:
        required: false
        default: false
        type: boolean
      vault-url:
        required: false
        default: https://vault.pp.dktapp.cloud
        type: string
      vault-namespace:
        required: false
        default: inix
        type: string
      vault-role:
        required: false
        default: whbox-ga-role
        type: string
      vault-secret-path:
        required: false
        default: whbox-tools/data/gh-actions
        type: string
jobs:
  static-analysis:
    name: "\U0001F50D Static analysis"
    timeout-minutes: 10
    runs-on: [self-hosted, decathlon]
    environment: ${{ inputs.environment }}
    permissions:
      id-token: write
      contents: read
      discussions: write
      pull-requests: write
    steps:
      - name: Pre-clean
        uses: dktunited/.github/actions/cleaner@main
      - name: 📥 Checkout code
        uses: actions/checkout@v4
      - name: Node.js and pnpm setup
        uses: ixxeL-DevOps/gha-templates/.github/actions/setup-pnpm@main
        with:
          node-version: ${{ inputs.node-version }}
          pnpm-version: ${{ inputs.pnpm-version }}
      - name: Linting
        id: pnpm-run-lint
        uses: ixxeL-DevOps/gha-templates/.github/actions/pnpm-run@main
        with:
          workingdir: ${{ inputs.workingdir }}
          script: lint
      - name: Hadolint Dockerfile Scan
        uses: hadolint/hadolint-action@v3.1.0
        continue-on-error: true
        with:
          dockerfile: ${{ inputs.workingdir }}/Dockerfile
          verbose: true
          failure-threshold: info
      - name: "\U0001F6AB Cancel workflow run"
        if: failure() && inputs.quick-fail == 'true'
        uses: ixxeL-DevOps/gha-templates/.github/actions/gh-run-cancel@main
        with:
          run-id: ${{ github.run_id }}
        env:
          GITHUB_TOKEN: ${{ secrets.git-admin-token }}
  unit-tests:
    name: "\U0001F9EA Unit tests"
    timeout-minutes: 12
    runs-on: [self-hosted, decathlon]
    environment: ${{ inputs.environment }}
    permissions:
      id-token: write
      contents: read
      discussions: write
      pull-requests: write
    steps:
      - name: Pre-clean
        uses: dktunited/.github/actions/cleaner@main
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Node.js and pnpm setup
        uses: ixxeL-DevOps/gha-templates/.github/actions/setup-pnpm@main
        with:
          node-version: ${{ inputs.node-version }}
          pnpm-version: ${{ inputs.pnpm-version }}
      - name: Unit tests
        id: pnpm-run-tests
        uses: ixxeL-DevOps/gha-templates/.github/actions/pnpm-run@main
        with:
          workingdir: ${{ inputs.workingdir }}
          script: "test:coverage"
      - name: SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.git-token }}
          SONAR_TOKEN: ${{ secrets.sonar-token }}
        with:
          args: ${{ inputs.sonar-args }}
      - name: GCloud auth
        id: gcp-auth
        uses: dktunited/.github/actions/gcloud_workload_identity@main
        with:
          workload_identity_provider: ${{ inputs.workload_identity_provider }}
          service_account: ${{ inputs.service_account }}
      - name: Publish test report
        continue-on-error: true
        uses: google-github-actions/upload-cloud-storage@v1
        with:
          path: ./coverage/lcov-report
          destination: ${{ format('{0}/{1}/{2}/unit', inputs.gcs-bucket-name, inputs.gcs-reports-path, github.ref) }}
          parent: false
          gzip: false
          process_gcloudignore: false
      - name: "\U0001F6AB Cancel workflow run"
        if: failure() && inputs.quick-fail == 'true'
        uses: ixxeL-DevOps/gha-templates/.github/actions/gh-run-cancel@main
        with:
          run-id: ${{ github.run_id }}
        env:
          GITHUB_TOKEN: ${{ secrets.git-admin-token }}
  e2e-tests:
    name: "\U0001F9EA E2E tests"
    timeout-minutes: 15
    runs-on: [self-hosted, decathlon]
    environment: ${{ inputs.environment }}
    permissions:
      id-token: write
      contents: read
      discussions: write
      pull-requests: write
    steps:
      - name: Pre-clean
        uses: dktunited/.github/actions/cleaner@main
      - name: 📥 Checkout code
        uses: actions/checkout@v4
      - name: Node.js and pnpm setup
        uses: ixxeL-DevOps/gha-templates/.github/actions/setup-pnpm@main
        with:
          node-version: ${{ inputs.node-version }}
          pnpm-version: ${{ inputs.pnpm-version }}
      - name: Playwright setup
        uses: ixxeL-DevOps/gha-templates/.github/actions/setup-playwright@main
        with:
          cache: ${{ inputs.playwright-cache }}
      - name: "Build code (pnpm) \U0001F4E6"
        run: pnpm build
      - name: Generate config file
        uses: ixxeL-DevOps/gha-templates/.github/actions/envsubst@main
        env:
          ENV: ${{ inputs.environment }}
          FEDID_URL: ${{ vars.FEDID_URL }}
          FEDID_CLIENT_ID: ${{ secrets.fedid-client-id }}
          BFF_URL: ${{ vars.BFF_URL }}
          BFF_KEY: ${{ secrets.bff-key }}
        with:
          file-input: ./config.template.js
          file-output: ./dist/config.js
      - name: E2E tests
        shell: bash
        continue-on-error: true
        run: xvfb-run pnpm playwright test
        env:
          PLAYWRIGHT_LOGIN: ${{ secrets.fedid-login }}
          PLAYWRIGHT_PASSWORD: ${{ secrets.fedid-password }}
      - name: GCloud auth
        id: gcp-auth
        uses: dktunited/.github/actions/gcloud_workload_identity@main
        with:
          workload_identity_provider: ${{ inputs.workload_identity_provider }}
          service_account: ${{ inputs.service_account }}
      - name: Publish test report
        continue-on-error: true
        uses: google-github-actions/upload-cloud-storage@v1
        with:
          path: ./playwright-report
          destination: ${{ format('{0}/{1}/{2}/e2e', inputs.gcs-bucket-name, inputs.gcs-reports-path, github.ref) }}
          parent: false
          gzip: false
          process_gcloudignore: false
      - name: "\U0001F6AB Cancel workflow run"
        if: failure() && inputs.quick-fail == 'true'
        uses: ixxeL-DevOps/gha-templates/.github/actions/gh-run-cancel@main
        with:
          run-id: ${{ github.run_id }}
        env:
          GITHUB_TOKEN: ${{ secrets.git-admin-token }}
  docker-build:
    name: "\U0001F433 Build docker"
    timeout-minutes: 12
    runs-on: [self-hosted, decathlon]
    environment: ${{ inputs.environment }}
    permissions:
      id-token: write
      contents: read
      discussions: write
      pull-requests: write
    steps:
      - name: Pre-clean
        uses: dktunited/.github/actions/cleaner@main
      - name: 📥 Checkout code
        uses: actions/checkout@v4
      - name: Node.js and pnpm setup
        uses: ixxeL-DevOps/gha-templates/.github/actions/setup-pnpm@main
        with:
          node-version: ${{ inputs.node-version }}
          pnpm-version: ${{ inputs.pnpm-version }}
      - name: "Build \U0001F4E6"
        run: pnpm build
      - name: Snyk Code Scan
        uses: dktunited/security/snyk@main
        with:
          snyk-token: ${{ secrets.snyk-token }}
          snyk-conf-is-pipeline-breakable: false
          snyk-conf-severity-threshold: "low"
      - name: ☁️ GCloud auth
        id: gcp-auth
        uses: dktunited/.github/actions/gcloud_workload_identity@main
        with:
          workload_identity_provider: ${{ inputs.workload_identity_provider }}
          service_account: ${{ inputs.service_account }}
      - name: GCloud GAR Authentication
        id: gcloud-gar-auth
        uses: ixxeL-DevOps/gha-templates/.github/actions/gcloud-gar-auth@main
        with:
          registry: ${{ inputs.gcp-base-url }}
      - name: Get branch name
        id: branch-name
        uses: tj-actions/branch-names@v7
      # Triggered when the commit is made on a non-trunk branch with an opened/opening PR
      - name: "\U0001F433 Build docker buildx [PR]"
        uses: docker/build-push-action@v5
        if: (steps.branch-name.outputs.is_default == 'false') && (!contains( github.ref, 'main' ) || !contains( github.ref, 'master' )) && github.event.pull_request != null
        with:
          context: ${{ inputs.workingdir }}
          platforms: linux/amd64
          push: false
          sbom: ${{ inputs.docker-sbom }}
          provenance: ${{ inputs.docker-provenance }}
          build-args: |
            ${{ inputs.docker-buildargs }}
          tags: |
            ${{ inputs.docker-target-registry }}/${{ inputs.image-name }}:${{ steps.branch-name.outputs.base_ref_branch }}-${{ github.run_number }}
            ${{ inputs.docker-target-registry }}/${{ inputs.image-name }}:PR-${{ github.event.pull_request.number }}
            ${{ inputs.docker-target-registry }}/${{ inputs.image-name }}:latest
      # Triggered when the commit is made on a non-trunk branch without an opened/opening PR
      - name: "\U0001F433 Build docker buildx [SLB]"
        uses: docker/build-push-action@v5
        if: (steps.branch-name.outputs.is_default == 'false') && (!contains( github.ref, 'main' ) || !contains( github.ref, 'master' )) &&  github.event.pull_request == null
        with:
          context: ${{ inputs.workingdir }}
          platforms: linux/amd64
          push: false
          sbom: ${{ inputs.docker-sbom }}
          provenance: ${{ inputs.docker-provenance }}
          build-args: |
            ${{ inputs.docker-buildargs }}
          tags: |
            ${{ inputs.docker-target-registry }}/${{ inputs.image-name }}:${{ steps.branch-name.outputs.default_branch }}-${{ github.run_number }}
            ${{ inputs.docker-target-registry }}/${{ inputs.image-name }}:latest
      # Triggered when the commit is made on the trunk
      - name: "\U0001F433 Build docker buildx and push to GAR [Trunk]"
        uses: docker/build-push-action@v5
        if: (steps.branch-name.outputs.is_default == 'true') && (contains( github.ref, 'main' ) || contains( github.ref, 'master' ))
        with:
          context: ${{ inputs.workingdir }}
          platforms: linux/amd64
          push: true
          sbom: ${{ inputs.docker-sbom }}
          provenance: ${{ inputs.docker-provenance }}
          build-args: |
            ${{ inputs.docker-buildargs }}
          tags: |
            ${{ inputs.docker-target-registry }}/${{ inputs.image-name }}:sha-${{ github.sha }}
            ${{ inputs.docker-target-registry }}/${{ inputs.image-name }}:latest
      - name: Run Prisma scan on docker image
        uses: dktunited/.github/actions/prisma@main
        with:
          docker-image: ${{ inputs.docker-target-registry }}/${{ inputs.image-name }}:latest
          prisma-user: ${{ secrets.prisma-user }}
          prisma-pass: ${{ secrets.prisma-pass }}
      - name: "\U0001F6AB Cancel workflow run"
        if: failure() && inputs.quick-fail == 'true'
        uses: ixxeL-DevOps/gha-templates/.github/actions/gh-run-cancel@main
        with:
          run-id: ${{ github.run_id }}
        env:
          GITHUB_TOKEN: ${{ secrets.git-admin-token }}
  Release:
    name: "\U0001F680 Release Docker image"
    timeout-minutes: 6
    runs-on: [self-hosted, decathlon]
    environment: ${{ inputs.environment }}
    needs: [static-analysis, unit-tests, e2e-tests, docker-build]
    permissions:
      id-token: write
      contents: read
      discussions: write
      pull-requests: write
    if: (contains( github.ref, 'main' ) || contains( github.ref, 'master' )) && github.event.pull_request == null
    steps:
      - name: Pre-clean
        uses: dktunited/.github/actions/cleaner@main
      - name: 📥 Checkout code
        uses: actions/checkout@v4
      - name: Get branch name
        id: branch-name
        uses: tj-actions/branch-names@v7
      - name: ☁️ GCloud auth
        id: auth
        uses: dktunited/.github/actions/gcloud_workload_identity@main
        with:
          workload_identity_provider: ${{ inputs.workload_identity_provider }}
          service_account: ${{ inputs.service_account }}
      - name: GCloud GAR Authentication
        id: gcloud-gar-auth
        uses: ixxeL-DevOps/gha-templates/.github/actions/gcloud-gar-auth@main
        with:
          registry: ${{ inputs.gcp-base-url }}
      - name: GCloud add tag
        id: gcloud-add-tag
        uses: ixxeL-DevOps/gha-templates/.github/actions/gcloud-add-tag@main
        with:
          image-fullname: ${{ inputs.docker-target-registry }}/${{ inputs.image-name }}
          src-image-tag: sha-${{ github.sha }}
          dst-image-tag: ${{ steps.branch-name.outputs.current_branch }}-${{ github.run_number }}
  Release-git:
    name: "\U0001F680 Release Github"
    timeout-minutes: 6
    runs-on: [self-hosted, decathlon]
    environment: ${{ inputs.environment }}
    needs: [static-analysis, unit-tests, e2e-tests, docker-build]
    permissions:
      id-token: write
      contents: read
      discussions: write
      pull-requests: write
    if: (contains( github.ref, 'main' ) || contains( github.ref, 'master' )) && github.event.pull_request == null && inputs.git-enable-tag == 'true'
    steps:
      - name: Get secrets
        id: get-secrets
        if: inputs.vault-enabled == true
        uses: hashicorp/vault-action@v2
        with:
          url: ${{ inputs.vault-url }}
          namespace: ${{ inputs.vault-namespace }}
          method: jwt
          role: ${{ inputs.vault-role }}
          secrets: |
            ${{ inputs.vault-secret-path }} GHA_PERSONNAL_ADMIN_TOKEN | GHA_PERSONNAL_ADMIN_TOKEN
      - name: 📥 Checkout code with Vault
        uses: actions/checkout@v4
        if: inputs.vault-enabled == true
        with:
          fetch-depth: "0"
          token: ${{ steps.get-secrets.outputs.GHA_PERSONNAL_ADMIN_TOKEN }}
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        if: inputs.vault-enabled == false
        with:
          fetch-depth: "0"
          token: ${{ secrets.git-admin-token }}
      - name: Git config
        id: git-config
        uses: ixxeL-DevOps/gha-templates/.github/actions/git-config@main
        with:
          git-workdir: ${{ inputs.workingdir }}
      - name: Get branch name
        id: branch-name
        uses: tj-actions/branch-names@v7
      - name: Git tag
        id: git-tag
        if: inputs.gh-release == 'false'
        uses: ixxeL-DevOps/gha-templates/.github/actions/git-tag@main
        with:
          tag-msg: "CI auto Git tag for ${{ steps.branch-name.outputs.current_branch }}-${{ github.run_number }}"
          tag-value: ${{ steps.branch-name.outputs.current_branch }}-${{ github.run_number }}
          commit-sha: ${{ github.sha }}
          git-workdir: ${{ inputs.workingdir }}
          push-option: ${{ inputs.push-option }}
      - name: GH Release with Vault
        id: gh-release-vault
        if: inputs.vault-enabled && inputs.gh-release == 'true'
        uses: ixxeL-DevOps/gha-templates/.github/actions/gh-release@main
        with:
          tag: ${{ steps.branch-name.outputs.current_branch }}-${{ github.run_number }}
          verify-tag: false
          target-branch: ${{ steps.branch-name.outputs.current_branch }}
        env:
          GH_TOKEN: ${{ steps.get-secrets.outputs.GHA_PERSONNAL_ADMIN_TOKEN }}
      - name: GH Release
        id: gh-release
        if: inputs.vault-enabled == false && inputs.gh-release == 'true'
        uses: ixxeL-DevOps/gha-templates/.github/actions/gh-release@main
        with:
          tag: ${{ steps.branch-name.outputs.current_branch }}-${{ github.run_number }}
          verify-tag: false
          target-branch: ${{ steps.branch-name.outputs.current_branch }}
        env:
          GH_TOKEN: ${{ secrets.git-admin-token }}
  Rollback:
    name: ♻️ Cleaning failed images
    timeout-minutes: 6
    runs-on: [self-hosted, decathlon]
    environment: ${{ inputs.environment }}
    needs: [static-analysis, unit-tests, e2e-tests, docker-build]
    permissions:
      id-token: write
      contents: read
      discussions: write
      pull-requests: write
    if: failure() && (contains( github.ref, 'main' ) || contains( github.ref, 'master' )) && github.event.pull_request == null
    steps:
      - name: Pre-clean
        uses: dktunited/.github/actions/cleaner@main
      - name: 📥 Checkout code
        uses: actions/checkout@v4
      - name: ☁️ GCloud auth
        id: auth
        uses: dktunited/.github/actions/gcloud_workload_identity@main
        with:
          workload_identity_provider: ${{ inputs.workload_identity_provider }}
          service_account: ${{ inputs.service_account }}
      - name: GCloud GAR Authentication
        id: gcloud-gar-auth
        uses: ixxeL-DevOps/gha-templates/.github/actions/gcloud-gar-auth@main
        with:
          registry: ${{ inputs.gcp-base-url }}
      - name: Delete image from GAR
        id: gcloud-delete-img
        uses: ixxeL-DevOps/gha-templates/.github/actions/gcloud-delete-img@main
        with:
          docker-img: ${{ inputs.docker-target-registry }}/${{ inputs.image-name }}:sha-${{ github.sha }}
