---
name: Releasing docker image
on:
  workflow_call:
    secrets:
      docker-io-pwd:
        required: false
      registry-password:
        required: false
      git-token:
        required: false
      gh-app-id:
        required: false
      gh-app-private-key:
        required: false
    inputs:
      # General
      prerelease:
        required: false
        default: "false"
        type: string
      component:
        required: false
        type: string
      retag-binary:
        required: false
        type: string
        default: "crane"
      registry-url:
        required: true
        type: string
      registry-username:
        required: true
        type: string
      cache-registry:
        required: false
        type: string
      build-image:
        required: false
        default: ixxel/toolbox:builder-latest
        type: string
      workingdir:
        required: false
        default: .
        type: string
      img-name:
        required: true
        type: string
      # git tag
      git-workdir:
        required: false
        default: .
        type: string
      tag-msg:
        required: false
        default: "ci"
        type: string
      push-option:
        required: false
        default: ci.skip
        type: string
      git-email:
        required: false
        default: test@mail.com
        type: string
      release-verify-tag:
        required: false
        default: false
        type: boolean
      always-bump:
        required: false
        default: "true"
        type: string

  workflow_dispatch:
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
jobs:
  releasing:
    name: Build
    timeout-minutes: 15
    runs-on: ubuntu-latest
    # container:
    #   image: ${{ inputs.build-image }}
    #   options: --privileged
    steps:
      - name: Clone repo
        id: clone
        uses: ixxeL-DevOps/gha-templates/.github/actions/git-clone@main
        with:
          mode: "app"
          app-id: ${{ secrets.gh-app-id }}
          private-key: ${{ secrets.gh-app-private-key }}
          fetch-depth: 0

      - name: Git config
        id: git-config
        uses: ixxeL-DevOps/gha-templates/.github/actions/git-config@main
        with:
          git-workdir: ${{ inputs.git-workdir }}
          git-email: ${{ steps.clone.outputs.USER_EMAIL }}
          git-username: ${{ steps.clone.outputs.USER_NAME }}

      - name: Calculate current and next tag
        id: svu
        uses: ixxeL-DevOps/gha-templates/.github/actions/svu@main
        with:
          workingdir: ${{ inputs.workingdir }}
          component: ${{ inputs.component }}
          prerelease: ${{ inputs.prerelease }}
          build: "false"
          always-bump: ${{ inputs.always-bump }}

      - name: Get last tag (Release Candidate)
        id: get-last-tag-rc
        uses: ixxeL-DevOps/gha-templates/.github/actions/git-get-last-tag@main
        if: inputs.prerelease == 'true'
        with:
          git-workdir: ${{ inputs.git-workdir }}
          branch: ${{ github.ref_name }}
          pattern: "${{ inputs.component }}-v?[0-9]{1,2}\\.[0-9]{1,3}\\.[0-9]{1,3}-rc\\.[0-9]+"
          starting-tag: ""

      - name: Get last tag (General Availability)
        id: get-last-tag-ga
        uses: ixxeL-DevOps/gha-templates/.github/actions/git-get-last-tag@main
        if: inputs.prerelease == 'false'
        with:
          git-workdir: ${{ inputs.git-workdir }}
          branch: ${{ github.ref_name }}
          pattern: "${{ inputs.component }}-v?[0-9]{1,2}\\.[0-9]{1,3}\\.[0-9]{1,3}$"
          starting-tag: ""

      - name: Skopeo retag [ Artefact promotion ]
        uses: ixxeL-DevOps/gha-templates/.github/actions/skopeo-retag@main
        id: skopeo-retag
        if: inputs.retag-binary == 'skopeo'
        with:
          registry-url: ${{ inputs.registry-url }}
          registry-username: ${{ inputs.registry-username }}
          registry-password: ${{ secrets.registry-password }}
          src-img: ${{ inputs.cache-registry }}/${{ inputs.img-name }}:sha-${{ github.sha }}
          dst-img: ${{ inputs.cache-registry }}/${{ inputs.img-name }}:${{ steps.svu.outputs.NEW_TAG }}

      - name: Crane retag [ Artefact promotion ]
        uses: ixxeL-DevOps/gha-templates/.github/actions/crane-retag@main
        id: crane-retag
        if: inputs.retag-binary == 'crane'
        with:
          registry-url: ${{ inputs.registry-url }}
          registry-username: ${{ inputs.registry-username }}
          registry-password: ${{ secrets.registry-password }}
          src-img: ${{ inputs.cache-registry }}/${{ inputs.img-name }}:sha-${{ github.sha }}
          dst-tag: ${{ steps.svu.outputs.NEW_TAG }}

      - name: Git tag
        id: git-tag
        uses: ixxeL-DevOps/gha-templates/.github/actions/git-tag@main
        with:
          tag-value: ${{ steps.svu.outputs.NEW_TAG }}
          commit-sha: ${{ github.ref_name }}
          git-workdir: ${{ inputs.git-workdir }}
          force-tag: "false"

      - name: Update changelog
        id: changelog
        uses: ixxeL-DevOps/gha-templates/.github/actions/generate-changelog@main
        with:
          workingdir: ${{ inputs.workingdir }}
          lower-tag: ${{ steps.get-last-tag-rc.outputs.LAST_TAG || steps.get-last-tag-ga.outputs.LAST_TAG || steps.svu.outputs.CURRENT_TAG || '' }}
          upper-tag: ${{ steps.svu.outputs.NEW_TAG }}

      - name: GH Release
        id: gh-release
        uses: ixxeL-DevOps/gha-templates/.github/actions/gh-release@main
        with:
          tag: ${{ steps.svu.outputs.NEW_TAG }}
          target-branch: ${{ github.ref_name }}
          verify-tag: "true"
          last-tag: ${{ steps.get-last-tag-rc.outputs.LAST_TAG || steps.get-last-tag-ga.outputs.LAST_TAG || steps.svu.outputs.CURRENT_TAG || '' }}
          auto-changelog: "false"
          notes-file: ${{ github.workspace }}/CHANGELOG.md
          prerelease: ${{ inputs.prerelease }}
        env:
          GH_TOKEN: ${{ steps.clone.outputs.TOKEN }}
