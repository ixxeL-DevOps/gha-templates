---
name: Releasing docker image
on:
  workflow_call:
    secrets:
      docker-io-pwd:
        required: false
      registry-password:
        required: false
      git-token:
        required: false
    inputs:
      # General
      release:
        required: false
        default: "false"
        type: string
      build-image:
        required: false
        default: ixxel/toolbox:builder-latest
        type: string
      workingdir:
        required: false
        default: .
        type: string
      img-name:
        required: true
        type: string
      tag:
        required: false
        type: string
      build-arg:
        required: false
        default: "CI=true"
        type: string
      target-dir:
        required: false
        default: artefacts
        type: string
      component:
        required: false
        type: string
      # docker login
      docker-config:
        required: false
        default: true
        type: boolean
      registry-url:
        required: true
        type: string
      registry-username:
        required: true
        type: string
      # podman-password:
      #   required: true
      #   type: string
      tls-verify:
        required: false
        type: boolean
      # buildkit
      dockerfile-name:
        required: false
        default: Dockerfile
        type: string
      caching:
        required: false
        default: true
        type: boolean
      cache-registry:
        required: false
        type: string
      push:
        description: Push img
        required: false
        default: true
        type: boolean
      # git tag
      git-workdir:
        required: false
        default: .
        type: string
      tag-msg:
        required: false
        default: "ci"
        type: string
      push-option:
        required: false
        default: ci.skip
        type: string
      git-email:
        required: false
        default: test@mail.com
        type: string
        # repo-url:
        #   required: true
      release-verify-tag:
        required: false
        default: false
        type: boolean
  workflow_dispatch:
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
jobs:
  releasing:
    name: Build
    timeout-minutes: 15
    runs-on: ubuntu-latest
    # container:
    #   image: ${{ inputs.build-image }}
    #   options: --privileged
    steps:
      - name: Clone code
        id: clone
        uses: actions/checkout@v4
        with:
          fetch-depth: "0"
          token: ${{ secrets.git-token }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Registry
        uses: docker/login-action@v3
        if: inputs.release == 'true'
        with:
          registry: ${{ inputs.registry-url }}
          username: ${{ inputs.registry-username }}
          password: ${{ secrets.registry-password }}
          logout: false
      - name: Git config
        id: git-config
        uses: ixxeL-DevOps/gha-templates/.github/actions/git-config@v0.10.0
        with:
          git-workdir: ${{ inputs.git-workdir }}
      - name: Calculate last and next tag
        id: svu
        uses: ixxeL-DevOps/gha-templates/.github/actions/svu@v0.10.0
        with:
          workingdir: ${{ inputs.workingdir }}
          component: ${{ inputs.component }}
      - name: Hadolint Dockerfile Scan
        uses: hadolint/hadolint-action@v3.1.0
        id: hadolint
        if: inputs.release == 'false'
        continue-on-error: true
        with:
          dockerfile: ${{ inputs.workingdir }}/Dockerfile
          verbose: true
          failure-threshold: info
      - name: Update PR
        uses: actions/github-script@v6
        if: inputs.release == 'false' && (github.ref != 'refs/heads/main' || github.ref != 'refs/heads/master') && github.event_name == 'pull_request'
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `
            #### Hadolint: \`${{ steps.hadolint.outcome }}\`
            \`\`\`
            ${process.env.HADOLINT_RESULTS}
            \`\`\`
            `;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })
      - name: Build Docker img for test
        uses: docker/build-push-action@v5
        if: inputs.release == 'false'
        with:
          context: ${{ inputs.workingdir }}
          platforms: linux/amd64
          push: false
          load: true
          sbom: false
          provenance: false
          cache-from: type=registry,ref=${{ inputs.cache-registry }}/${{ inputs.img-name }}:buildcache
          build-args: |
            ${{ inputs.build-arg }}
          tags: |
            ${{ inputs.cache-registry }}/${{ inputs.img-name }}:${{ steps.svu.outputs.VERSION }}
            ${{ inputs.cache-registry }}/${{ inputs.img-name }}:latest
      - name: Build and publish Docker img
        uses: docker/build-push-action@v5
        if: inputs.release == 'true'
        with:
          context: ${{ inputs.workingdir }}
          platforms: linux/amd64
          push: true
          sbom: false
          provenance: false
          cache-from: type=registry,ref=${{ inputs.cache-registry }}/${{ inputs.img-name }}:buildcache
          cache-to: type=registry,ref=${{ inputs.cache-registry }}/${{ inputs.img-name }}:buildcache,mode=max
          build-args: |
            ${{ inputs.build-arg }}
          tags: |
            ${{ inputs.cache-registry }}/${{ inputs.img-name }}:${{ steps.svu.outputs.VERSION }}
            ${{ inputs.cache-registry }}/${{ inputs.img-name }}:latest
      - name: Git tag
        id: git-tag
        uses: ixxeL-DevOps/gha-templates/.github/actions/git-tag@v0.10.0
        if: inputs.release == 'true'
        with:
          tag-value: ${{ steps.svu.outputs.VERSION }}
          commit-sha: ${{ github.sha }}
          git-workdir: ${{ inputs.git-workdir }}
          force-tag: "false"
