##################################################
# DO NOT CALL DIRECTLY THIS WORKFLOW ON PROJECTS #
##################################################
#
# Define a tag, promote in GAR and git tag accordingly
#

---
name: Retag img to specific env and git tag accordingly
on:
  workflow_call:
    secrets:
      git-admin-token:
        required: false
      git-token:
        required: false
    inputs:
      workingdir:
        required: false
        default: .
        type: string
      # GCP auth
      workload_identity_provider:
        required: true
        type: string
      service_account:
        required: true
        type: string
      # GAR
      gcp-registry:
        description: GCP registry name
        required: true
        type: string
      gcp-repository:
        description: GCP repository the image is stored in
        required: true
        type: string
      image-name:
        description: Name of the docker image
        required: true
        type: string
      original-tag:
        description: "Image original tag (ex: master-*)"
        required: true
        type: string
      target-env:
        description: name of the target environment for deployment/retag
        required: false
        default: test
        type: string
      # git tag
      push-option:
        required: false
        default: ci.skip
        type: string
      git-workdir:
        required: false
        default: .
        type: string
      gh-release:
        required: false
        default: "true"
        type: string
      release-target-branch:
        required: false
        default: ${{ github.ref_name }}
        type: string
      tag-pattern:
        description: tag pattern to look for
        required: false
        default: "false"
        type: string
      semver-enabled:
        description: enable semantic versioning
        required: false
        default: "false"
        type: string
      bump-kind:
        required: false
        default: patch
        type: string
      # Vault
      vault-enabled:
        required: false
        default: false
        type: boolean
      vault-url:
        required: false
        default: ""
        type: string
      vault-namespace:
        required: false
        default: inix
        type: string
      vault-role:
        required: false
        default: ""
        type: string
      vault-secret-path:
        required: false
        default: secretengine/data/gh-actions
        type: string
jobs:
  promote-and-release:
    name: "\U0001F680 Promote and Release"
    runs-on: ubuntu-latest
    timeout-minutes: 15
    permissions:
      checks: write
      contents: write
      deployments: write
      issues: write
      id-token: write
      pull-requests: write
      statuses: write
    outputs:
      img-digest: ${{ steps.get-img-info.outputs.IMG_DIGEST }}
      img-sha: ${{ steps.get-img-info.outputs.IMG_SHA }}
    steps:
      - name: Clone code
        uses: actions/checkout@v4
        if: inputs.vault-enabled == false
        with:
          fetch-depth: 0
          token: ${{ secrets.git-admin-token }}
      - name: GCloud GAR Authentication
        id: gcloud-gar-auth
        uses: ixxeL-DevOps/gha-templates/.github/actions/gcloud-gar-auth@v0.23.0
        with:
          registry: ${{ inputs.gcp-registry }}
      - name: Get img SHA
        id: get-img-info
        uses: ixxeL-DevOps/gha-templates/.github/actions/get-img-info@v0.23.0
        with:
          image-fullname: ${{ inputs.gcp-registry }}/${{ inputs.gcp-repository }}/${{ inputs.image-name }}
          image-tag: ${{ inputs.original-tag }}
      - name: Git config
        id: git-config
        uses: ixxeL-DevOps/gha-templates/.github/actions/git-config@v0.23.0
        with:
          git-workdir: ${{ inputs.git-workdir }}
      - name: Get last tag
        id: get-last-tag
        if: inputs.semver-enabled != 'true'
        uses: ixxeL-DevOps/gha-templates/.github/actions/git-get-last-tag@v0.23.0
        with:
          git-workdir: ${{ inputs.workingdir }}
          branch: ${{ inputs.release-target-branch }}
          pattern: "^${{ inputs.target-env }}-*"
          starting-tag: ""
      - name: Get last preprod tag
        id: get-last-preprod-tag
        if: inputs.semver-enabled == 'true'
        uses: ixxeL-DevOps/gha-templates/.github/actions/git-get-last-tag@v0.23.0
        with:
          git-workdir: ${{ inputs.workingdir }}
          branch: ${{ inputs.release-target-branch }}
          pattern: '^(v?[0-9]+\.[0-9]+\.[0-9]+-rc\.[0-9]+)$'
          starting-tag: ""
      - name: Get last prod tag
        id: get-last-prod-tag
        if: inputs.semver-enabled == 'true'
        uses: ixxeL-DevOps/gha-templates/.github/actions/git-get-last-tag@v0.23.0
        with:
          git-workdir: ${{ inputs.workingdir }}
          branch: ${{ inputs.release-target-branch }}
          pattern: '^(v?[0-9]+\.[0-9]+\.[0-9]+)$'
          starting-tag: ""
      - name: Bump version
        id: bump-version
        if: inputs.semver-enabled == 'true'
        uses: ixxeL-DevOps/gha-templates/.github/actions/pysemver@v0.23.0
        with:
          bump-kind: ${{ inputs.bump-kind }}
          last-preprod-tag: ${{ steps.get-last-preprod-tag.outputs.LAST_TAG }}
          last-prod-tag: ${{ steps.get-last-prod-tag.outputs.LAST_TAG }}
          current-version: ${{ steps.get-last-tag.outputs.LAST_TAG }}
          target-env: ${{ inputs.target-env }}
      - name: Define final tag
        id: define-final-tag
        run: |
          if [[ "${{ inputs.semver-enabled }}" != 'true' ]]
          then
            FINAL_VERSION=${{ inputs.target-env }}-${{ github.run_number }}
            LAST_VERSION=${{ steps.get-last-tag.outputs.LAST_TAG }}
            if [[ "${{ inputs.target-env }}" == 'preprod' ]]
            then
              PRERELEASE=true
            elif [[ "${{ inputs.target-env }}" == 'prod' ]]
            then
              PRERELEASE=false
            fi
          else
            FINAL_VERSION=${{ steps.bump-version.outputs.VERSION }}
            if [[ "${{ inputs.target-env }}" == 'preprod' ]]
            then
              LAST_VERSION=${{ steps.get-last-preprod-tag.outputs.LAST_TAG }}
              PRERELEASE=true
            elif [[ "${{ inputs.target-env }}" == 'prod' ]]
            then
              LAST_VERSION=${{ steps.get-last-prod-tag.outputs.LAST_TAG }}
              PRERELEASE=false
            fi
          fi
          echo "FINAL_VERSION=$FINAL_VERSION" >> $GITHUB_OUTPUT
          echo "LAST_VERSION=$LAST_VERSION" >> $GITHUB_OUTPUT
          echo "PRERELEASE=$PRERELEASE" >> $GITHUB_OUTPUT
      - name: "\U0001F3F7️ Git tag"
        id: git-tag
        uses: ixxeL-DevOps/gha-templates/.github/actions/git-tag@v0.23.0
        with:
          tag-msg: "CI auto Git tag for ${{ inputs.gcp-registry }}/${{ inputs.gcp-repository }}/${{ inputs.image-name }} deployment to ${{ inputs.target-env }} env"
          tag-value: ${{ steps.define-final-tag.outputs.FINAL_VERSION }}
          commit-sha: ${{ steps.get-img-info.outputs.IMG_SHA }}
          git-workdir: ${{ inputs.git-workdir }}
          push-option: ${{ inputs.push-option }}
      - name: "\U0001F3F7️ Git tag preprod catch up"
        id: git-tag-catch-up
        if: steps.bump-version.outputs.PREPROD_CATCH_UP == 'true' && inputs.semver-enabled == 'true'
        uses: ixxeL-DevOps/gha-templates/.github/actions/git-tag@v0.23.0
        with:
          tag-msg: "CI auto Git tag for ${{ inputs.gcp-registry }}/${{ inputs.gcp-repository }}/${{ inputs.image-name }} deployment to ${{ inputs.target-env }} env"
          tag-value: ${{ steps.define-final-tag.outputs.FINAL_VERSION }}-rc.1
          commit-sha: ${{ steps.get-img-info.outputs.IMG_SHA }}
          git-workdir: ${{ inputs.git-workdir }}
          push-option: ${{ inputs.push-option }}
      - name: "\U0001F680 GH Release with Vault"
        id: gh-release-vault
        if: inputs.vault-enabled && inputs.gh-release == 'true'
        uses: ixxeL-DevOps/gha-templates/.github/actions/gh-release@v0.23.0
        with:
          tag: ${{ steps.define-final-tag.outputs.FINAL_VERSION }}
          verify-tag: true
          target-branch: ${{ inputs.release-target-branch }}
          last-tag: ${{ steps.define-final-tag.outputs.LAST_VERSION }}
          prerelease: ${{ steps.define-final-tag.outputs.PRERELEASE }}
        env:
          GH_TOKEN: ${{ steps.get-secrets.outputs.GHA_PERSONNAL_ADMIN_TOKEN }}
      - name: "\U0001F680 GH Release"
        id: gh-release
        if: inputs.vault-enabled == false && inputs.gh-release == 'true'
        uses: ixxeL-DevOps/gha-templates/.github/actions/gh-release@v0.23.0
        with:
          tag: ${{ steps.define-final-tag.outputs.FINAL_VERSION }}
          verify-tag: true
          target-branch: ${{ inputs.release-target-branch }}
          last-tag: ${{ steps.define-final-tag.outputs.LAST_VERSION }}
          prerelease: ${{ steps.define-final-tag.outputs.PRERELEASE }}
        env:
          GH_TOKEN: ${{ secrets.git-admin-token }}
      - name: "\U0001F3F7️ GCloud add tag"
        id: gcloud-add-tag
        uses: ixxeL-DevOps/gha-templates/.github/actions/gcloud-add-tag@v0.23.0
        with:
          image-fullname: ${{ inputs.gcp-registry }}/${{ inputs.gcp-repository }}/${{ inputs.image-name }}
          src-image-tag: ${{ inputs.original-tag }}
          dst-image-tag: ${{ steps.define-final-tag.outputs.FINAL_VERSION }}
      - name: "\U0001F3F7️ GCloud add tag preprod catch up"
        id: gcloud-add-tag-catch-up
        if: steps.bump-version.outputs.PREPROD_CATCH_UP == 'true'
        uses: ixxeL-DevOps/gha-templates/.github/actions/gcloud-add-tag@v0.23.0
        with:
          image-fullname: ${{ inputs.gcp-registry }}/${{ inputs.gcp-repository }}/${{ inputs.image-name }}
          src-image-tag: ${{ inputs.original-tag }}
          dst-image-tag: ${{ steps.define-final-tag.outputs.FINAL_VERSION }}-rc.1
