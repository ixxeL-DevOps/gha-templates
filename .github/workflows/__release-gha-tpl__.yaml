---
name: Release GHA templates
on:
  workflow_call:
    secrets:
      git-token:
        required: true
    inputs:
      workingdir:
        required: false
        default: "./"
        type: string
      runs-on:
        description: OS to run jobs on
        required: false
        default: ubuntu-latest
        type: string
      prerelease:
        required: false
        default: "false"
        type: string
      ci-image:
        description: docker image to run pipeline on
        required: false
        default: ixxel/toolbox:base-latest
        type: string
      workflows-directory:
        description: directory in which to find workflows
        required: false
        default: "./.github/workflows/*.yaml"
        type: string
      actions-source:
        description: origin of actions
        required: false
        default: ixxeL-DevOps
        type: string
      new-ref:
        required: false
        type: string
      git-workdir:
        required: false
        default: .
        type: string
      push-option:
        required: false
        default: ci.skip
        type: string
      update-base-tag:
        required: false
        default: true
        type: boolean
      release-verify-tag:
        required: false
        default: false
        type: boolean
      release-target-branch:
        required: false
        default: ${{ github.ref_name }}
        type: string
      increment:
        required: false
        default: fix
        type: string
jobs:
  release-gha-tpl:
    name: "\U0001F680 Release"
    timeout-minutes: 5
    runs-on: ${{ inputs.runs-on }}
    # permissions:
    #   contents: read
    #   pages: write
    #   id-token: write
    container:
      image: ${{ inputs.ci-image }}
    steps:
      - name: Clone code
        uses: actions/checkout@v4
        with:
          fetch-depth: "0"
          token: ${{ secrets.git-token }}
      - name: Git config
        id: git-config
        uses: ixxeL-DevOps/gha-templates/.github/actions/git-config@main
        with:
          git-workdir: ${{ inputs.workingdir }}
      - name: Build regex pattern
        id: regex-pattern
        shell: bash
        run: |
          if [ "${{ inputs.prerelease }}" == "true" ]
          then
            REGEX='v?[0-9]{1,2}\\.[0-9]{1,2}\\.[0-9]{1,2}-rc\\.[0-9]{1,2}$'
          else
            REGEX='v?[0-9]{1,2}\\.[0-9]{1,2}\\.[0-9]{1,2}$'
          fi
          echo "Regex is $REGEX"
          echo "REGEX=$REGEX" >> GITHUB_OUTPUT

      - name: Calculate current and next tag
        id: svu
        uses: ixxeL-DevOps/gha-templates/.github/actions/svu@main
        with:
          workingdir: ${{ inputs.workingdir }}
          prerelease: ${{ inputs.prerelease }}

      - name: Get last tag
        id: get-last-tag
        uses: ixxeL-DevOps/gha-templates/.github/actions/git-get-last-tag@main
        with:
          git-workdir: ${{ inputs.git-workdir }}
          branch: ${{ github.ref_name }}
          pattern: ${{ steps.regex-pattern.outputs.REGEX }}
          starting-tag: ""

      - name: Substitute ref
        id: substitute-ref
        uses: ixxeL-DevOps/gha-templates/.github/actions/change-action-ref@main
        with:
          workflows-directory: ${{ inputs.workflows-directory }}
          actions-source: ${{ inputs.actions-source }}
          new-ref: ${{ steps.svu.outputs.NEW_TAG }}
      - name: Git push
        id: git-push
        uses: ixxeL-DevOps/gha-templates/.github/actions/git-push@main
        with:
          git-msg: "⚙️ build(ci): Release version ${{ steps.svu.outputs.NEW_TAG }} from user ${GITHUB_ACTOR} [skip ci]"
          git-workdir: ${{ inputs.workingdir }}
          git-staging-dir: ${{ inputs.workingdir }}
          push-option: ${{ inputs.push-option }}
      - name: Git tag
        id: git-tag
        uses: ixxeL-DevOps/gha-templates/.github/actions/git-tag@main
        with:
          tag-value: ${{ steps.svu.outputs.NEW_TAG }}
          commit-sha: ${{ github.ref_name }}
          git-workdir: ${{ inputs.git-workdir }}
          force-tag: "false"
          update-base-tags: "${{ inputs.prerelease == 'false' }}"
      - name: Update changelog
        id: changelog
        uses: ixxeL-DevOps/gha-templates/.github/actions/generate-changelog@main
        with:
          workingdir: ${{ inputs.workingdir }}
          install: "false"
          lower-tag: ${{ steps.get-last-tag.outputs.LAST_TAG || steps.svu.outputs.CURRENT_TAG || '' }}
          upper-tag: ${{ steps.svu.outputs.NEW_TAG }}
      - name: GH Release
        id: gh-release
        uses: ixxeL-DevOps/gha-templates/.github/actions/gh-release@main
        with:
          tag: ${{ steps.svu.outputs.NEW_TAG }}
          verify-tag: ${{ inputs.release-verify-tag }}
          last-tag: ${{ steps.get-last-tag.outputs.LAST_TAG || steps.svu.outputs.CURRENT_TAG || '' }}
          target-branch: ${{ github.ref_name }}
          auto-changelog: "false"
          notes-file: CHANGELOG.md
          prerelease: ${{ inputs.prerelease }}
        env:
          GH_TOKEN: ${{ github.token }}
      - name: Git revert to main
        id: git-revert
        uses: ixxeL-DevOps/gha-templates/.github/actions/git-revert@main
        with:
          git-workdir: ${{ inputs.workingdir }}
          push-option: ${{ inputs.push-option }}
          commit-sha-revert: ${{ steps.git-push.outputs.GIT_PUSHED_COMMIT_SHA }}
          git-msg: "⚙️ revert(ci): restore workflow ref to trunk branch [skip ci]"
