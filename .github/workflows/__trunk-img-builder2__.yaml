---
name: Custom Image Builder CI
on:
  workflow_call:
    secrets:
      github-api-rest-token:
        required: false
      docker-io-pwd:
        required: false
      registry-password:
        required: false
      git-token:
        required: false
    inputs:
      # General
      release:
        description: If release is true, will enable full workflow to push and release
        required: false
        default: false
        type: boolean
      release-target-branch:
        required: false
        default: ${{ github.ref_name }}
        type: string
      build-image:
        required: false
        default: ixxel/toolbox:builder-latest
        type: string
      workingdir:
        required: false
        default: .
        type: string
      img-name:
        required: true
        type: string
      tag:
        required: false
        type: string
      build-arg:
        required: false
        default: "CI=true"
        type: string
      target-dir:
        required: false
        default: artefacts
        type: string
      component:
        required: false
        type: string
        # Checkov
      artefact:
        required: true
        type: string
      compact:
        required: false
        default: true
        type: boolean
      quiet:
        required: false
        default: false
        type: boolean
      no-guide:
        required: false
        default: false
        type: boolean
      format:
        required: false
        default: cli
        type: string
      threshold:
        required: false
        default: critical
        type: string
      soft-fail:
        required: false
        default: true
        type: boolean
      gate:
        required: false
        default: "50"
        type: string
      # podman login
      podman-docker:
        required: false
        type: boolean
      docker-config:
        required: false
        default: true
        type: boolean
      registry-url:
        required: true
        type: string
      registry-username:
        required: true
        type: string
      # podman-password:
      #   required: true
      #   type: string
      tls-verify:
        required: false
        type: boolean
      podman-verbose:
        required: false
        default: true
        type: boolean
      docker-hub-login:
        required: false
        default: true
        type: boolean
      # buildkit
      oci-worker-snapshotter:
        required: false
        default: fuse-overlayfs
        type: string
      dockerfile-frontend:
        required: false
        default: dockerfile.v0
        type: string
      dockerfile-name:
        required: false
        default: Dockerfile
        type: string
      compression-format:
        required: false
        default: tar
        type: string
      buildkit-inline-buildinfo-attrs:
        required: false
        default: true
        type: boolean
      buildkit-inline-cache:
        required: false
        default: true
        type: boolean
      caching:
        required: false
        default: true
        type: boolean
      cache-registry:
        required: false
        type: string
      push:
        description: Push img
        required: false
        default: true
        type: boolean
      # Grype
      transport:
        description: transport type for destination (docker,docker-archive,oci-dir,oci-archive,dir,sbom,registry)
        required: false
        default: docker-archive
        type: string
      fail-on:
        description: set the return code to 1 if a vulnerability is found with a severity >= the given severity
        required: false
        default: critical
        type: string
      output:
        description: report output formatter, formats=[json table cyclonedx template]
        required: false
        default: table
        type: string
      scope:
        description: selection of layers to analyze, options=[Squashed AllLayers]
        required: false
        default: Squashed
        type: string
      template:
        description: specify the path to a Go template file (requires template output to be selected)
        required: false
        default: '""'
        type: string
      verbose:
        description: increase verbosity (-v = info, -vv = debug)
        required: false
        default: ""
        type: string
      # git tag
      git-workdir:
        required: false
        default: .
        type: string
      tag-msg:
        required: false
        default: "ci"
        type: string
      push-option:
        required: false
        default: ci.skip
        type: string
      git-email:
        required: false
        default: test@mail.com
        type: string
        # repo-url:
        #   required: true
      release-verify-tag:
        required: false
        default: false
        type: boolean
  workflow_dispatch:
jobs:
  build:
    name: Build
    timeout-minutes: 15
    runs-on: ubuntu-latest
    # container:
    #   image: ${{ inputs.build-image }}
    #   options: --privileged
    steps:
      - name: Clone code
        id: clone
        uses: actions/checkout@v4
        with:
          fetch-depth: "0"
          token: ${{ secrets.git-token }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: ${{ inputs.registry-url }}
          username: ${{ inputs.registry-username }}
          password: ${{ secrets.registry-password }}
          logout: false
      - name: Git config
        id: git-config
        uses: ixxeL-DevOps/gha-templates/.github/actions/git-config@v0.9.5
        with:
          git-workdir: ${{ inputs.git-workdir }}
      - name: Get last tag
        id: get-last-tag
        uses: ixxeL-DevOps/gha-templates/.github/actions/git-get-last-tag@v0.9.5
        with:
          git-workdir: ${{ inputs.workingdir }}
          pattern: "${{ inputs.component }}-v[0-9]*.[0-9]*.[0-9]*"
          starting-tag: ""
          branch: ${{ inputs.release-target-branch }}
      - name: Install svu
        run: |
          wget https://github.com/caarlos0/svu/releases/download/v1.12.0/svu_1.12.0_linux_amd64.tar.gz
          tar -xzvf svu_1.12.0_linux_amd64.tar.gz
          chmod +x svu
          mv svu /usr/local/bin/
      - name: Detect bump
        id: bump-version
        run: |
          VERSION=$(svu n --prefix="${{ inputs.component }}-v" --pattern='${{ inputs.component }}-v*')
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
      - name: Build and export to Docker
        uses: docker/build-push-action@v5
        with:
          context: ${{ inputs.workingdir }}
          platforms: linux/amd64
          load: true
          push: false
          sbom: false
          provenance: false
          build-args: |
            ${{ inputs.build-arg }}
          tags: |
            ${{ inputs.img-name }}:${{ steps.bump-version.outputs.VERSION }}
            ${{ inputs.img-name }}:latest
